{"version":3,"sources":["img/sad.png","img/thumbup.png","App.js","utils/utils.js","utils/thymeleaf-utils.js","panels/RedirectButtonType.js","panels/ButtonTemplate.js","utils/PlatformType.js","panels/RedirectButton.js","panels/utils.js","panels/Message.js","panels/ErrorMessage.js","panels/UnregisteredUserMessage.js","panels/ContentPanel.js","utils/render.js","utils/start.js","utils/handleEvent.js","index.js","img/kind.png","panels/style.module.css"],"names":["module","exports","App","panel","activePanel","props","id","exists","obj","undefined","strIsBlank","str","ThymeleafParamName","getThymeleafParam","paramName","getThymeleafParamWithDefault","defaultValue","el","$","text","getThymeleafParamBool","getThymeleafParamInt","strRes","parseInt","RedirectButtonType","ButtonTemplate","onClick","size","level","className","styles","button","PlatformType","RedirectButton","urlThParamName","buttonTextThParamName","type","DIALOG","GROUP","href","openInNewTab","MOBILE","wrapper","flex","buttonLink","target","handleLineBreakers","lines","split","getLines","length","map","line","createRegisteredDependentRedirectButton","redirectButtonType","Message","marginTopPc","marginTopMobile","textHeader","emoticon","buttons","marginTop","PC","style","container","src","alt","ErrorMessage","sadImg","UnregisteredUserMessage","kindImg","ContentPanel","headerText","content","render","Tag","tag","panelHeaderText","contentPanel","ReactDOM","document","getElementById","start","alert","handleEvent","event","detail","connect","send","subscribe","e"],"mappings":"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","file":"static/js/main.f238e241.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sad.bdea5aa6.png\";","module.exports = __webpack_public_path__ + \"static/media/thumbup.c8b601ab.png\";","import React from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nconst App = ({ panel }) => {\n\treturn (\n\t\t<View activePanel={panel.props.id} >\n\t\t\t{panel}\n\t\t</View>\n\t);\n}\n\nexport default App;","const LINE_BREAKER = '\\n';\n\nexport function exists(obj) {\n\treturn obj !== undefined && obj !== null;\n}\n\nexport function strIsBlank(str) {\n\treturn !exists(str) || str === '';\n}\n\nexport function getLines(str) {\n\tif (strIsBlank(str)) {\n\t\treturn str;\n\t}\n\treturn str.split(LINE_BREAKER);\n}\n\nexport function isString(val) {\n\treturn typeof val === 'string';\n}","import $ from 'jquery';\nimport { strIsBlank, exists } from './utils';\n\nexport const ThymeleafParamName = {\n\tTOKEN: 'token',\n\tERROR: 'error',\n\tIS_REGISTERED: 'is-registered',\n\tPLATFORM_TYPE: 'platform-type',\n\tERROR_HEADER: 'error-header',\n\tERROR_TEXT: 'error-text',\n\tDIALOG_URL: 'dialog-url',\n\tGROUP_URL: 'group-url',\n\tPANEL_HEADER_TEXT: 'panel-header-text',\n\tDIALOG_REDIRECT_BUTTON_TEXT: 'dialog-redirect-button-text',\n\tGROUP_REDIRECT_BUTTON_TEXT: 'group-redirect-button-text',\n\tTMP_ACCESS_PROVIDED_HEADER: 'tmp-access-provided-header',\n\tTMP_ACCESS_PROVIDED_TEXT: 'tmp-access-provided-text',\n\tPERMANENT_ACCESS_BUTTON_TEXT: 'permanent-access-button-text',\n\tNEED_CACHE_CLEAN_HEADER: 'need-cache-clean-header',\n\tNEED_CACHE_CLEAN_PC_TEXT: 'need-cache-clean-pc-text',\n\tNEED_CACHE_CLEAN_MOBILE_TEXT: 'need-cache-clean-mobile-text',\n\tNEED_CACHE_CLEAN_COMMON_TEXT: 'need-cache-clean-common-text',\n\tGET_ACCESS_TYPE_METHOD_URN: 'get-access-type-method-urn',\n\tAPI_URL: 'api-url',\n\tPERMANENT_ACCESS_PROVIDED_HEADER: 'permanent-access-provided-header',\n\tPERMANENT_ACCESS_PROVIDED_TEXT: 'permanent-access-provided-text',\n\tUNREGISTERED_USER_MESSAGE_HEADER: 'unregistered-user-message-header',\n\tUNREGISTERED_USER_MESSAGE_TEXT: 'unregistered-user-message-text'\n};\n\nexport function getThymeleafParam(paramName) {\n\treturn getThymeleafParamWithDefault(paramName, null);\n}\n\nexport function getThymeleafParamWithDefault(paramName, defaultValue) {\n\tconst el = $('#th-' + paramName);\n\tif (!el || strIsBlank(el.text())) {\n\t\treturn defaultValue;\n\t}\n\treturn el.text();\n}\n\nexport function getThymeleafParamBool(paramName) {\n\tconst strRes = getThymeleafParamWithDefault(paramName, 'false');\n\tif (strRes === 'true') {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function getThymeleafParamInt(paramName) {\n\tconst strRes = getThymeleafParam(paramName);\n\tif (!exists(strRes)) {\n\t\treturn null;\n\t}\n\treturn parseInt(strRes, 10);\n}","const RedirectButtonType = {\n\t\"DIALOG\": 0,\n\t\"GROUP\": 1\n}\n\nexport default RedirectButtonType;","import React from 'react';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\nimport styles from './style.module.css';\n\nconst ButtonTemplate = ({ text, onClick }) => (\n\t<Button size=\"l\" level=\"secondary\" className={styles.button} {...(onClick && { onClick: onClick })}>{text}</Button>\n);\n\nexport default ButtonTemplate;","const PlatformType = {\n\t\"PC\": 0,\n\t\"MOBILE\": 1,\n\t\"M_VK_COM\": 2\n}\n\nexport default PlatformType;","import React from 'react';\nimport ButtonTemplate from './ButtonTemplate';\nimport styles from './style.module.css';\nimport { ThymeleafParamName, getThymeleafParam, getThymeleafParamInt } from '../utils/thymeleaf-utils';\nimport { exists } from '../utils/utils';\nimport PlatformType from '../utils/PlatformType';\nimport RedirectButtonType from './RedirectButtonType';\n\nconst RedirectButton = ({ type }) => {\n\tlet urlThParamName;\n\tlet buttonTextThParamName;\n\tswitch (type) {\n\t\tcase RedirectButtonType.DIALOG:\n\t\t\turlThParamName = ThymeleafParamName.DIALOG_URL;\n\t\t\tbuttonTextThParamName = ThymeleafParamName.DIALOG_REDIRECT_BUTTON_TEXT;\n\t\t\tbreak;\n\t\tcase RedirectButtonType.GROUP:\n\t\t\turlThParamName = ThymeleafParamName.GROUP_URL;\n\t\t\tbuttonTextThParamName = ThymeleafParamName.GROUP_REDIRECT_BUTTON_TEXT;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tif (!exists(urlThParamName) || !exists(buttonTextThParamName)) {\n\t\treturn null;\n\t}\n\n\tconst href = getThymeleafParam(urlThParamName);\n\tconst text = getThymeleafParam(buttonTextThParamName);\n\tif (!exists(href) || !exists(text)) {\n\t\treturn null;\n\t}\n\n\tconst openInNewTab = getThymeleafParamInt(ThymeleafParamName.PLATFORM_TYPE) !== PlatformType.MOBILE;\n\treturn (\n\t\t<a className={`${styles.wrapper} ${styles.flex} ${styles.buttonLink}`} href={href} {...(openInNewTab && { target: \"_blank\" })}>\n\t\t\t<ButtonTemplate text={text} />\n\t\t</a>\n\t)\n};\n\nexport default RedirectButton;","import React from 'react';\nimport { getLines, strIsBlank } from '../utils/utils';\nimport { ThymeleafParamName, getThymeleafParamBool } from '../utils/thymeleaf-utils';\nimport RedirectButtonType from './RedirectButtonType';\nimport RedirectButton from './RedirectButton';\n\nexport function handleLineBreakers(str) {\n\tif (strIsBlank(str)) {\n\t\treturn str;\n\t}\n\tconst lines = getLines(str);\n\treturn (\n\t\tlines.length === 1 ? str : lines.map((line) => {\n\t\t\tif (strIsBlank(line)) {\n\t\t\t\treturn <br />\n\t\t\t}\n\t\t\treturn <div>{line}</div>\n\t\t})\n\t);\n}\n\nexport function createRegisteredDependentRedirectButton() {\n\tlet redirectButtonType;\n\tconst isRegistered = getThymeleafParamBool(ThymeleafParamName.IS_REGISTERED);\n\tif (isRegistered) {\n\t\tredirectButtonType = RedirectButtonType.DIALOG;\n\t} else {\n\t\tredirectButtonType = RedirectButtonType.GROUP;\n\t}\n\treturn <RedirectButton type={redirectButtonType} />\n}","import React from 'react';\n\nimport styles from './style.module.css';\nimport { ThymeleafParamName, getThymeleafParamInt } from '../utils/thymeleaf-utils';\nimport { exists } from '../utils/utils';\nimport { handleLineBreakers } from './utils';\nimport PlatformType from '../utils/PlatformType';\n\nconst Message = ({ marginTopPc, marginTopMobile, textHeader, emoticon, text, buttons }) => {\n\tconst thPlatformType = getThymeleafParamInt(ThymeleafParamName.PLATFORM_TYPE);\n\tconst isMobile = thPlatformType !== PlatformType.PC;\n\tconst marginTop = isMobile === true ? marginTopMobile : marginTopPc;\n\treturn (\n\t\t<div style={{ marginTop: (marginTop) }}>\n\t\t\t<div className={styles.container}>\n\t\t\t\t<div className={styles.textHeader}>{handleLineBreakers(textHeader)}</div>\n\t\t\t\t<img className={styles.emoticon} src={emoticon} alt=\"\" />\n\t\t\t\t<div className={`${styles.wrapper} ${styles.text}`}>{handleLineBreakers(text)}</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\texists(buttons) && buttons.map((button) => {\n\t\t\t\t\tif (!exists(button)) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn (button);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Message;","import React from 'react';\nimport { ThymeleafParamName, getThymeleafParamWithDefault } from '../utils/thymeleaf-utils';\nimport Message from './Message';\nimport sadImg from '../img/sad.png';\nimport {createRegisteredDependentRedirectButton} from './utils';\n\nconst ErrorMessage = () => {\n\tconst errorHeaderThParamName = ThymeleafParamName.ERROR_HEADER;\n\tconst textHeader = getThymeleafParamWithDefault(errorHeaderThParamName, 'Извините,\\nчто-то пошло не так');\n\tconst errorTextThParamName = ThymeleafParamName.ERROR_TEXT;\n\tconst text = getThymeleafParamWithDefault(errorTextThParamName, 'Скоро всё исправим');\n\tconst buttons = [createRegisteredDependentRedirectButton()];\n\treturn <Message marginTopPc='15%' marginTopMobile='20%' textHeader={textHeader} emoticon={sadImg} text={text} buttons={buttons} />;\n\n};\n\nexport default ErrorMessage;","import React from 'react';\n\nimport Message from './Message';\nimport kindImg from '../img/kind.png';\nimport RedirectButton from './RedirectButton';\nimport RedirectButtonType from './RedirectButtonType';\nimport { ThymeleafParamName, getThymeleafParam } from '../utils/thymeleaf-utils';\n\nconst UnregisteredUserMessage = () => {\n\tconst textHeader = getThymeleafParam(ThymeleafParamName.UNREGISTERED_USER_MESSAGE_HEADER);\n\tconst text = getThymeleafParam(ThymeleafParamName.UNREGISTERED_USER_MESSAGE_TEXT);\n\tconst buttons = [<RedirectButton type={RedirectButtonType.DIALOG} />];\n\treturn <Message marginTopPc='15%' marginTopMobile='25%' textHeader={textHeader} emoticon={kindImg} text={text} buttons={buttons} />;\n}\n\nexport default UnregisteredUserMessage;","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\n\nconst ContentPanel = ({ id, headerText, content }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>\n\t\t\t{headerText}\n\t\t</PanelHeader>\n\t\t{content}\n\t</Panel>\n);\n\nexport default ContentPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../App';\nimport ContentPanel from '../panels/ContentPanel';\nimport { ThymeleafParamName, getThymeleafParam } from './thymeleaf-utils';\n\nfunction render(type) {\n\tconst ComponentWrapper = ({ tag }) => {\n\t\tconst Tag = tag;\n\t\treturn <Tag />;\n\t}\n\tconst content = <ComponentWrapper tag={type} />\n\tconst panelHeaderText = getThymeleafParam(ThymeleafParamName.PANEL_HEADER_TEXT);\n\tconst contentPanel = <ContentPanel id='content' headerText={panelHeaderText} content={content} />\n\tReactDOM.render(<App panel={contentPanel} />, document.getElementById('root'));\n}\n\nexport default render;","import ErrorMessage from '../panels/ErrorMessage';\nimport UnregisteredUserMessage from '../panels/UnregisteredUserMessage';\nimport TemporaryAccessProvided from '../panels/TemporaryAccessProvided';\nimport { ThymeleafParamName, getThymeleafParam, getThymeleafParamBool } from './thymeleaf-utils';\nimport { exists } from './utils';\nimport render from './render';\nimport request from './request';\nimport VKDtataAccessType from './VKDtataAccessType';\nimport PermanentAccessProvided from '../panels/PermanentAccessProvided';\n\nfunction start() {\n\talert('start');\n\tif (getThymeleafParamBool(ThymeleafParamName.ERROR)) {\n\t\trender(ErrorMessage);\n\t} else {\n\t\trender(UnregisteredUserMessage);\n\t\t// const methodUrn = getThymeleafParam(ThymeleafParamName.GET_ACCESS_TYPE_METHOD_URN);\n\t\t// request(methodUrn, (data) => {\n\t\t// \tif (!exists(data)) {\n\t\t// \t\trender(UnregisteredUserMessage);\n\t\t// \t}\n\t\t// \tswitch (data) {\n\t\t// \t\tcase VKDtataAccessType.NONE:\n\t\t// \t\t\t// TODO запрос доступа\n\t\t// \t\t\talert('Запрос к списку друзей');\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase VKDtataAccessType.TEMPORARY:\n\t\t// \t\t\trender(TemporaryAccessProvided);\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase VKDtataAccessType.PERMANENT:\n\t\t// \t\t\trender(PermanentAccessProvided);\n\t\t// \t\t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tbreak;\n\t\t// \t}\n\t\t// });\n\t}\n}\n\nexport default start;","import start from './start';\n\nfunction handleEvent(event) {\n\tswitch (event.detail.type) {\n\t\tcase \"VKWebAppViewRestore\":\n\t\t\thandleViewRestore();\n\t\t\tbreak;\n\t}\n}\n\nfunction handleViewRestore() {\n\talert('view restore')\n\tstart();\n}\n\nexport default handleEvent;","// NOTE без App рушится верстка\nimport App from './App';\nimport 'core-js/features/map';\nimport 'core-js/features/set';\nimport connect from '@vkontakte/vk-connect';\nimport start from './utils/start';\nimport handleEvent from './utils/handleEvent';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send(\"VKWebAppInit\", {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nstart();\nconnect.subscribe((e) => handleEvent(e));","module.exports = __webpack_public_path__ + \"static/media/kind.7362beef.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textHeader\":\"style_textHeader__1kvhw\",\"emoticon\":\"style_emoticon__2rlby\",\"container\":\"style_container__3RFqX\",\"text\":\"style_text__1F2EP\",\"link\":\"style_link__1iMrX\",\"button\":\"style_button__1gPxd\",\"wrapper\":\"style_wrapper__2cWjy\",\"flex\":\"style_flex__3yOg6\",\"buttonLink\":\"style_buttonLink__18msL\"};"],"sourceRoot":""}